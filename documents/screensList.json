{
  "key": "screensList",
  "value": [
    {
      "id": "SCR-001",
      "category": "システム",
      "screenName": "ログイン画面",
      "description": "システムへのログインを行う画面。",
      "Screen components": "ログインフォーム（ユーザーID、パスワード入力欄、ログインボタン）",
      "operatingProcedure": "ユーザーIDとパスワードを入力し、ログインボタンをクリックする。",
      "user": "すべてのユーザー",
      "accessRight": "guest",
      "fileName": "login.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "null",
      "relatedBackendHandles": [
        {
          "id": "BAC-001",
          "category": "システム",
          "handleName": "ログイン処理",
          "description": "ユーザーIDとパスワードを検証し、認証トークンを発行する。",
          "handleProcedure": "ユーザーIDとパスワードを受け取り、データベースのユーザー情報を検証する。検証に成功した場合、認証トークンを生成し、クライアントに返す。失敗した場合はエラーレスポンスを返す。",
          "fileName": "auth/login.ts",
          "relatedScreen": "SCR-001",
          "relatedFrontendCode": "{\"code\": \"import { render, screen, fireEvent } from '@testing-library/react';\nimport Login from '@/pages/login';\n\ndescribe('Login Component Test', () => {\n  test('renders login form with user ID, password fields, and login button', () => {\n    render(<Login />);\n    expect(screen.getByLabelText('ユーザーID')).toBeInTheDocument();\n    expect(screen.getByLabelText('パスワード')).toBeInTheDocument();\n    expect(screen.getByRole('button', { name: 'ログイン' })).toBeInTheDocument();\n  });\n\n  test('calls login function with correct user ID and password on button click', async () => {\n    const mockLogin = jest.fn();\n    render(<Login loginFunc={mockLogin} />);\n\n    fireEvent.change(screen.getByLabelText('ユーザーID'), { target: { value: 'testuser' } });\n    fireEvent.change(screen.getByLabelText('パスワード'), { target: { value: 'password' } });\n    fireEvent.click(screen.getByRole('button', { name: 'ログイン' }));\n\n    expect(mockLogin).toHaveBeenCalledWith('testuser', 'password');\n  });\n\n  test('displays error message when login fails', async () => {\n    const mockLogin = jest.fn().mockRejectedValue(new Error('ログイン失敗'));\n    render(<Login loginFunc={mockLogin} />);\n\n    fireEvent.change(screen.getByLabelText('ユーザーID'), { target: { value: 'testuser' } });\n    fireEvent.change(screen.getByLabelText('パスワード'), { target: { value: 'password' } });\n    fireEvent.click(screen.getByRole('button', { name: 'ログイン' }));\n\n    // エラーメッセージが表示されるか確認\n    expect(await screen.findByText('ログイン失敗')).toBeVisible();\n\n  });\n});\"}"
        }
      ]
    },
    {
      "id": "SCR-002",
      "category": "システム",
      "screenName": "メインメニュー",
      "description": "システム全体のメニューを表示する画面。",
      "Screen components": "メニュー項目（顧客管理、契約管理、請求管理、発行スケジュール管理、発送管理、レポートとデータ出力、商品管理、アラート機能へのリンク）",
      "operatingProcedure": "各メニュー項目をクリックして、関連する画面へ遷移する。",
      "user": "すべてのユーザー",
      "accessRight": "loged-in user",
      "fileName": "menu.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-003",
      "category": "顧客管理",
      "screenName": "顧客一覧画面",
      "description": "登録されている顧客の一覧を表示する画面。",
      "Screen components": "顧客リスト（顧客ID、顧客名、連絡先などの一覧表示）、検索フォーム、新規顧客登録ボタン",
      "operatingProcedure": "顧客情報を検索または一覧表示し、必要に応じて新規顧客登録画面へ遷移する。",
      "user": "契約担当者、顧客対応担当者",
      "accessRight": "loged-in user",
      "fileName": "customers/list.tsx",
      "getData": "[{\"table\":\"customers\", \"items\":[\"customer_id\",\"name\",\"phone\", \"email\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-004",
      "category": "顧客管理",
      "screenName": "顧客情報登録画面",
      "description": "新規顧客情報を登録する画面。",
      "Screen components": "顧客情報入力フォーム（氏名、住所、連絡先、組織名、担当者名、役職、郵便番号、メールアドレス、電話番号、備考、警告フラグ）、登録ボタン",
      "operatingProcedure": "顧客情報を入力し、登録ボタンをクリックする。",
      "user": "契約担当者、顧客対応担当者",
      "accessRight": "loged-in user",
      "fileName": "customers/register.tsx",
      "getData": "null",
      "postData": "[{\"table\":\"customers\", \"items\":[\"customer_code\",\"name\",\"furigana\", \"gender\", \"birth_date\", \"age\", \"organization_name\", \"representative_name\", \"job_title\", \"postal_code\", \"address1\", \"address2\", \"email\", \"phone\", \"notes\", \"warning_flag\"]}]",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-005",
      "category": "顧客管理",
      "screenName": "顧客詳細画面",
      "description": "選択された顧客の詳細情報を表示する画面。",
      "Screen components": "顧客情報詳細表示（顧客ID、氏名、住所、連絡先などの詳細情報）、顧客情報編集ボタン",
      "operatingProcedure": "顧客詳細情報を確認し、必要に応じて編集画面へ遷移する。",
      "user": "契約担当者、顧客対応担当者",
      "accessRight": "loged-in user",
      "fileName": "customers/[customer_id].tsx",
      "getData": "[{\"table\":\"customers\", \"items\":[\"customer_id\",\"customer_code\",\"name\",\"furigana\", \"gender\", \"birth_date\", \"age\", \"organization_name\", \"representative_name\", \"job_title\", \"postal_code\", \"address1\", \"address2\", \"email\", \"phone\", \"notes\", \"warning_flag\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-006",
      "category": "顧客管理",
      "screenName": "顧客情報編集画面",
      "description": "顧客情報を編集する画面。",
      "Screen components": "顧客情報編集フォーム（氏名、住所、連絡先などの編集可能な入力フォーム）、保存ボタン",
      "operatingProcedure": "顧客情報を編集し、保存ボタンをクリックする。",
      "user": "契約担当者、顧客対応担当者",
      "accessRight": "loged-in user",
      "fileName": "customers/[customer_id]/edit.tsx",
      "getData": "[{\"table\":\"customers\", \"items\":[\"customer_id\",\"customer_code\",\"name\",\"furigana\", \"gender\", \"birth_date\", \"age\", \"organization_name\", \"representative_name\", \"job_title\", \"postal_code\", \"address1\", \"address2\", \"email\", \"phone\", \"notes\", \"warning_flag\"]}]",
      "postData": "[{\"table\":\"customers\", \"items\":[\"customer_code\",\"name\",\"furigana\", \"gender\", \"birth_date\", \"age\", \"organization_name\", \"representative_name\", \"job_title\", \"postal_code\", \"address1\", \"address2\", \"email\", \"phone\", \"notes\", \"warning_flag\"]}]",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-007",
      "category": "契約管理",
      "screenName": "契約一覧画面",
      "description": "登録されている契約の一覧を表示する画面。",
      "Screen components": "契約リスト（契約ID、顧客名、契約開始日、終了日などの一覧表示）、検索フォーム、新規契約登録ボタン",
      "operatingProcedure": "契約情報を検索または一覧表示し、必要に応じて新規契約登録画面へ遷移する。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contracts/list.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"contract_date\", \"customer_id\", \"product_code\", \"start_issue_no\", \"end_issue_no\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-008",
      "category": "契約管理",
      "screenName": "新規契約登録画面",
      "description": "新規契約情報を登録する画面。",
      "Screen components": "契約情報入力フォーム（顧客ID、購読開始日、終了日、請求パターンなどの入力欄）、登録ボタン",
      "operatingProcedure": "契約情報を入力し、登録ボタンをクリックする。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contracts/register.tsx",
      "getData": "[{\"table\":\"customers\", \"items\":[\"customer_id\",\"name\"]}, {\"table\":\"products\", \"items\":[\"product_code\", \"product_name\"]}]",
      "postData": "[{\"table\":\"subscriptions\", \"items\":[\"customer_id\",\"contract_no\",\"contract_date\", \"product_code\", \"start_issue_no\", \"end_issue_no\", \"total_issues\", \"sent_issues\", \"remaining_issues\", \"last_sent_issue_no\", \"continuation_flag\", \"application_method\", \"payment_method\", \"contract_pattern\", \"expected_payment_date\", \"confirmed_payment_date\", \"cancellation_type\", \"gift_shipping_flag\", \"renewal_notice_flag\"]}]",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-009",
      "category": "契約管理",
      "screenName": "契約詳細画面",
      "description": "選択された契約の詳細情報を表示する画面。",
      "Screen components": "契約情報詳細表示（契約ID、顧客名、契約内容などの詳細情報）、契約情報編集ボタン、契約更新案内作成ボタン、契約更新登録ボタン",
      "operatingProcedure": "契約詳細情報を確認し、必要に応じて編集画面、更新案内作成画面、更新登録画面へ遷移する。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contracts/[contract_id].tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"contract_date\", \"customer_id\", \"product_code\", \"start_issue_no\", \"end_issue_no\", \"total_issues\", \"sent_issues\", \"remaining_issues\", \"last_sent_issue_no\", \"continuation_flag\", \"application_method\", \"payment_method\", \"contract_pattern\", \"expected_payment_date\", \"confirmed_payment_date\", \"cancellation_type\", \"gift_shipping_flag\", \"renewal_notice_flag\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-010",
      "category": "契約管理",
      "screenName": "契約情報編集画面",
      "description": "契約情報を編集する画面。",
      "Screen components": "契約情報編集フォーム（契約内容などの編集可能な入力フォーム）、保存ボタン",
      "operatingProcedure": "契約情報を編集し、保存ボタンをクリックする。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contracts/[contract_id]/edit.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"contract_date\", \"customer_id\", \"product_code\", \"start_issue_no\", \"end_issue_no\", \"total_issues\", \"sent_issues\", \"remaining_issues\", \"last_sent_issue_no\", \"continuation_flag\", \"application_method\", \"payment_method\", \"contract_pattern\", \"expected_payment_date\", \"confirmed_payment_date\", \"cancellation_type\", \"gift_shipping_flag\", \"renewal_notice_flag\"]}]",
      "postData": "[{\"table\":\"subscriptions\", \"items\":[\"contract_no\",\"contract_date\", \"customer_id\", \"product_code\", \"start_issue_no\", \"end_issue_no\", \"total_issues\", \"sent_issues\", \"remaining_issues\", \"last_sent_issue_no\", \"continuation_flag\", \"application_method\", \"payment_method\", \"contract_pattern\", \"expected_payment_date\", \"confirmed_payment_date\", \"cancellation_type\", \"gift_shipping_flag\", \"renewal_notice_flag\"]}]",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-011",
      "category": "契約管理",
      "screenName": "契約更新案内作成画面",
      "description": "契約更新案内を作成する画面。",
      "Screen components": "契約更新案内フォーム（契約ID、顧客名、契約期間、更新内容などの表示）、案内作成ボタン",
      "operatingProcedure": "契約更新案内を作成し、作成ボタンをクリックする。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contracts/[contract_id]/renewal_notice.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"contract_date\", \"customer_id\", \"product_code\", \"start_issue_no\", \"end_issue_no\", \"total_issues\", \"sent_issues\", \"remaining_issues\", \"last_sent_issue_no\", \"continuation_flag\", \"application_method\", \"payment_method\", \"contract_pattern\", \"expected_payment_date\", \"confirmed_payment_date\", \"cancellation_type\", \"gift_shipping_flag\", \"renewal_notice_flag\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": [
        {
          "id": "BAC-002",
          "category": "契約管理",
          "handleName": "契約更新案内書類生成",
          "description": "契約IDを基に契約更新案内書類を生成する処理。",
          "handleProcedure": "契約IDを受け取り、契約情報、顧客情報、商品情報をデータベースから取得する。取得した情報を基に契約更新案内書類を生成し、PDF形式などで保存する。",
          "fileName": "contracts/renewal_notice.ts",
          "relatedScreen": "SCR-011",
          "relatedFrontendCode": "{\"code\": \"import { render, screen, fireEvent } from '@testing-library/react';\nimport RenewalNotice from '@/pages/contracts/[contract_id]/renewal_notice';\n\n// モックデータ\nconst mockData = {\n  subscription_id: 1,\n  contract_no: \\\"C-001\\\",\n  customer_id: 1,\n  product_code: \\\"P-001\\\",\n  // ... other data\n};\n\n// ヘッダーコンポーネントのモック\njest.mock('@/components/Header', () => () => <div>ヘッダー</div>);\n\ndescribe('契約更新案内作成画面', () => {\n  beforeEach(() => {\n    // fetch のモックを設定\n    fetch.mockResolvedValueOnce({\n      ok: true,\n      json: () => Promise.resolve(mockData),\n    });\n  });\n\n  it('契約更新案内情報が正しく表示される', async () => {\n    render(<RenewalNotice contract_id=\\\"1\\\" />); // contract_id を渡す\n\n    // データの読み込みを待つ\n    await screen.findByText(\\\"C-001\\\");\n\n    // 契約情報が表示されていることを確認\n    expect(screen.getByText(\\\"C-001\\\")).toBeInTheDocument();\n    // ... other data assertions\n    expect(screen.getByText(\\\"ヘッダー\\\")).toBeInTheDocument();\n  });\n\n  it('作成ボタンクリックで更新案内が作成される', async () => {\n    render(<RenewalNotice contract_id=\\\"1\\\" />);\n    await screen.findByText(\\\"C-001\\\");\n\n    // 作成ボタンのクリックイベントをモック\n    const createButton = screen.getByRole('button', { name: /作成/i });\n    fireEvent.click(createButton);\n\n    // 更新案内作成処理が呼び出されたことを確認\n    // 実際にはAPI呼び出しなどが行われるため、その部分のモックが必要\n  });\n});\"}"
        }
      ]
    },
    {
      "id": "SCR-012",
      "category": "契約管理",
      "screenName": "契約更新登録画面",
      "description": "契約更新を登録する画面。",
      "Screen components": "契約更新登録フォーム（更新契約情報入力欄）、登録ボタン",
      "operatingProcedure": "更新契約情報を入力し、登録ボタンをクリックする。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contracts/[contract_id]/renewal_register.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"contract_date\", \"customer_id\", \"product_code\", \"start_issue_no\", \"end_issue_no\", \"total_issues\", \"sent_issues\", \"remaining_issues\", \"last_sent_issue_no\", \"continuation_flag\", \"application_method\", \"payment_method\", \"contract_pattern\", \"expected_payment_date\", \"confirmed_payment_date\", \"cancellation_type\", \"gift_shipping_flag\", \"renewal_notice_flag\"]}]",
      "postData": "[{\"table\":\"subscriptions\", \"items\":[\"contract_no\",\"contract_date\", \"customer_id\", \"product_code\", \"start_issue_no\", \"end_issue_no\", \"total_issues\", \"sent_issues\", \"remaining_issues\", \"last_sent_issue_no\", \"continuation_flag\", \"application_method\", \"payment_method\", \"contract_pattern\", \"expected_payment_date\", \"confirmed_payment_date\", \"cancellation_type\", \"gift_shipping_flag\", \"renewal_notice_flag\"]}]",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-013",
      "category": "契約管理",
      "screenName": "契約検索画面",
      "description": "契約情報を検索する画面。",
      "Screen components": "検索フォーム（顧客ID、契約IDなどの検索条件入力欄）、検索結果表示エリア",
      "operatingProcedure": "検索条件を入力し、検索ボタンをクリックする。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contracts/search.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-014",
      "category": "契約管理",
      "screenName": "契約チェックリスト画面",
      "description": "契約チェックリストを表示する画面。",
      "Screen components": "契約チェックリスト表示（契約ID、契約内容のチェック項目リスト）",
      "operatingProcedure": "契約チェックリストを確認する。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contracts/checklist.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"contract_date\", \"customer_id\", \"product_code\", \"start_issue_no\", \"end_issue_no\", \"total_issues\", \"sent_issues\", \"remaining_issues\", \"last_sent_issue_no\", \"continuation_flag\", \"application_method\", \"payment_method\", \"contract_pattern\", \"expected_payment_date\", \"confirmed_payment_date\", \"cancellation_type\", \"gift_shipping_flag\", \"renewal_notice_flag\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-015",
      "category": "請求管理",
      "screenName": "未入金一覧表示画面",
      "description": "未入金の一覧を表示する画面。",
      "Screen components": "未入金一覧リスト（顧客名、契約ID、請求金額、未入金額、期日などの一覧表示）、検索フォーム",
      "operatingProcedure": "未入金情報を検索または一覧表示する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "billing/unpaid_list.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-016",
      "category": "商品管理",
      "screenName": "商品登録・修正画面",
      "description": "商品情報を登録、修正する画面。",
      "Screen components": "商品情報入力フォーム（商品コード、商品名、説明、単価、税率）、登録ボタン",
      "operatingProcedure": "商品情報を入力し、登録または修正ボタンをクリックする。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "products/edit.tsx",
      "getData": "[{\"table\":\"products\", \"items\":[\"product_code\",\"product_name\", \"product_description\", \"unit_price\", \"tax_rate\"]}]",
      "postData": "[{\"table\":\"products\", \"items\":[\"product_code\",\"product_name\", \"product_description\", \"unit_price\", \"tax_rate\"]}]",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-017",
      "category": "レポートとデータ出力",
      "screenName": "レポートデータ出力画面",
      "description": "契約者一覧表、売上一覧表、入金集計表などのレポートをCSV形式で出力する画面。",
      "Screen components": "レポート選択メニュー（契約者一覧、売上一覧、入金集計など）、出力条件設定フォーム、出力ボタン",
      "operatingProcedure": "レポート種別と出力条件を設定し、出力ボタンをクリックする。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "reports/output.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": [
        {
          "id": "BAC-005",
          "category": "レポートとデータ出力",
          "handleName": "レポートデータ出力",
          "description": "契約者一覧表、売上一覧表、入金集計表などのレポートをCSV形式で出力する。",
          "handleProcedure": "レポート種別と出力条件を受け取り、データベースから必要な情報を取得する。取得したデータを基にCSV形式のレポートデータを生成し、クライアントに返す。",
          "fileName": "reports/generate_csv.ts",
          "relatedScreen": "SCR-017",
          "relatedFrontendCode": "{\"code\": \"import { render, screen, fireEvent } from '@testing-library/react';\nimport { jest } from '@jest/globals';\nimport ReportsOutput from '@/pages/reports/output';\n\ndescribe('ReportsOutput Component', () => {\n  const mockHandleSubmit = jest.fn();\n\n  beforeEach(() => {\n    render(<ReportsOutput onSubmit={mockHandleSubmit} />);  // onSubmit prop\n  });\n\n  it('renders Header component', () => {\n    // Header component is expected to be rendered within ReportsOutput\n    expect(screen.getByRole('banner')).toBeInTheDocument();\n  });\n\n  it('レポート選択メニューが存在する', () => {\n    expect(screen.getByRole('combobox', { name: /レポート種別/i })).toBeInTheDocument();\n  });\n\n  it('出力条件設定フォームが存在する', () => {\n    expect(screen.getByRole('textbox', { name: /開始日/i })).toBeInTheDocument();\n    expect(screen.getByRole('textbox', { name: /終了日/i })).toBeInTheDocument();\n    // Add more input fields as needed based on your actual form\n  });\n\n  it('出力ボタンが存在し、クリックできる', () => {\n    const submitButton = screen.getByRole('button', { name: /出力/i });\n    expect(submitButton).toBeInTheDocument();\n    fireEvent.click(submitButton);\n    expect(mockHandleSubmit).toHaveBeenCalledTimes(1);\n  });\n\n  describe('レポート選択メニューの変更', () => {\n    it('契約者一覧を選択できる', () => {\n      const select = screen.getByRole('combobox', { name: /レポート種別/i });\n      fireEvent.change(select, { target: { value: '契約者一覧' } });\n      expect(select.value).toBe('契約者一覧');\n    });\n\n    // 他のレポート種別についても同様のテストを追加\n  });\n\n  // 出力条件設定フォームへの入力とバリデーションのテスト\n  describe('出力条件設定フォームのバリデーション', () => {\n    it('開始日と終了日の入力とバリデーション', () => {\n      const startDateInput = screen.getByRole('textbox', { name: /開始日/i });\n      const endDateInput = screen.getByRole('textbox', { name: /終了日/i });\n\n      fireEvent.change(startDateInput, { target: { value: '2024-07-20' } });\n      fireEvent.change(endDateInput, { target: { value: '2024-07-25' } });\n\n      expect(startDateInput.value).toBe('2024-07-20');\n      expect(endDateInput.value).toBe('2024-07-25');\n\n      // ここにバリデーションのテストを追加 (例: 終了日が開始日より前だとエラー)\n    });\n\n    // 他の入力フィールドについても同様のテストを追加\n  });\n});\n\"}"
        }
      ]
    },
    {
      "id": "SCR-018",
      "category": "レポートとデータ出力",
      "screenName": "ラベルデータ出力画面",
      "description": "発送用ラベルデータを出力する画面。",
      "Screen components": "出力条件設定フォーム、出力ボタン",
      "operatingProcedure": "出力条件を設定し、出力ボタンをクリックする。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "reports/label_output.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": [
        {
          "id": "BAC-006",
          "category": "レポートとデータ出力",
          "handleName": "ラベルデータ出力",
          "description": "発送用ラベルデータを出力する。",
          "handleProcedure": "出力条件を受け取り、データベースから必要な情報を取得する。取得したデータを基にラベルデータを生成し、クライアントに返す。",
          "fileName": "reports/generate_label.ts",
          "relatedScreen": "SCR-018",
          "relatedFrontendCode": "{\"code\": \"import { render, screen, fireEvent } from '@testing-library/react';\nimport { jest } from '@jest/globals';\nimport axios from 'axios';\nimport LabelOutput from '@/pages/reports/label_output';\n\n// Fetch のモック\nglobal.fetch = jest.fn(() => Promise.resolve({\n  json: () => Promise.resolve({}),\n  text: () => Promise.resolve(\\\"\\\"),\n  ok: true,\n  status: 200,\n  statusText: \\\"OK\\\",\n})) as jest.Mock;\n\n// Axios のモック\njest.mock('axios');\nconst mockedAxios = axios as jest.Mocked<typeof axios>;\n\n// Next.js の Router モック\nconst mockRouter = {\n  push: jest.fn(),\n  replace: jest.fn(),\n  back: jest.fn(),\n  forward: jest.fn(),\n  refresh: jest.fn(),\n  prefetch: jest.fn(),\n};\n\njest.mock('next/navigation', () => ({\n  useRouter: () => mockRouter,\n  usePathname: jest.fn(),\n  useSearchParams: jest.fn(() => new URLSearchParams()),\n}));\n\n// グローバル変数の設定\ndeclare global {\n  namespace NodeJS {\n    interface Global {\n      fetch: jest.Mock;\n      mockNextRouter: typeof mockRouter;\n    }\n  }\n  var mockNextRouter: typeof mockRouter;\n  var axios: typeof mockedAxios;\n}\n\nglobal.mockNextRouter = mockRouter;\nglobal.axios = mockedAxios;\n\n// テスト前の共通セットアップ\nbeforeEach(() => {\n  jest.clearAllMocks();\n});\n\ndescribe('ラベルデータ出力画面', () => {\n  it('Headerコンポーネントが表示される', () => {\n    render(<LabelOutput />);    \n    expect(screen.getByRole('heading', { name: '定期購読管理システム' })).toBeTruthy();\n  });\n\n  it('出力ボタンをクリックできる', async () => {\n    render(<LabelOutput />);\n    const submitButton = screen.getByRole('button', { name: '出力' });\n    fireEvent.click(submitButton);\n    // Axiosを使った出力処理が呼ばれたことを確認\n    expect(mockedAxios.post).toHaveBeenCalledTimes(1);\n  });\n});\"}"
        }
      ]
    },
    {
      "id": "SCR-019",
      "category": "レポートとデータ出力",
      "screenName": "発送データ出力画面",
      "description": "発送データを出力する画面。",
      "Screen components": "出力条件設定フォーム、出力ボタン",
      "operatingProcedure": "出力条件を設定し、出力ボタンをクリックする。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "reports/shipping_output.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": [
        {
          "id": "BAC-007",
          "category": "レポートとデータ出力",
          "handleName": "発送データ出力",
          "description": "発送データを出力する。",
          "handleProcedure": "出力条件を受け取り、データベースから必要な情報を取得する。取得したデータを基に発送データを生成し、クライアントに返す。",
          "fileName": "reports/generate_shipping.ts",
          "relatedScreen": "SCR-019",
          "relatedFrontendCode": "{\"code\": \"import { render, screen, fireEvent } from '@testing-library/react';\nimport { jest } from '@jest/globals';\nimport axios from 'axios';\nimport ShippingOutput from '@/pages/reports/shipping_output';\n\n// ヘッダーコンポーネントのモック\njest.mock('@/components/common/Header', () => {\n  return () => <div>Header Mock</div>;\n});\n\n// Axios のモック設定\nconst mockedAxios = axios as jest.Mocked<typeof axios>;\nbeforeEach(() => {\n  mockedAxios.get.mockResolvedValue({ data: [] });\n});\n\ndescribe('発送データ出力画面', () => {\n  test('コンポーネントがレンダリングされる', () => {\n    render(<ShippingOutput />);  // モックヘッダーとモックデータを使用\n    expect(screen.getByText('Header Mock')).toBeInTheDocument(); // モックヘッダーが表示される\n  });\n\n  test('出力ボタンクリックでデータ取得が実行される', async () => {\n    render(<ShippingOutput />); // モックヘッダーとモックデータを使用\n\n    // 出力ボタンクリックをシミュレート\n    fireEvent.click(screen.getByRole('button', { name: /出力/ }));\n\n    // モック関数が呼ばれたことを確認\n    expect(mockedAxios.get).toHaveBeenCalled();\n  });\n});\"}"
        }
      ]
    },
    {
      "id": "SCR-020",
      "category": "レポートとデータ出力",
      "screenName": "定期元帳出力画面",
      "description": "定期元帳をデータ出力する画面。",
      "Screen components": "出力条件設定フォーム、出力ボタン",
      "operatingProcedure": "出力条件を設定し、出力ボタンをクリックする。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "reports/ledger_output.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": [
        {
          "id": "BAC-008",
          "category": "レポートとデータ出力",
          "handleName": "定期元帳出力",
          "description": "定期元帳をデータ出力する。",
          "handleProcedure": "出力条件を受け取り、データベースから必要な情報を取得する。取得したデータを基に定期元帳データを生成し、クライアントに返す。",
          "fileName": "reports/generate_ledger.ts",
          "relatedScreen": "SCR-020",
          "relatedFrontendCode": "{\"code\": \"import { render, screen, fireEvent } from '@testing-library/react';\nimport { jest } from '@jest/globals';\nimport axios from 'axios';\nimport LedgerOutput from '@/pages/reports/ledger_output';\n\n// モック\njest.mock('axios');\nconst mockedAxios = axios as jest.Mocked<typeof axios>;\n\n// ヘッダーコンポーネント（ダミー）\nconst Header = () => <div>ヘッダー</div>;\n\ndescribe('定期元帳出力画面', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('画面が正しくレンダリングされる', () => {\n    render(<LedgerOutput />);  // Header コンポーネントをpropsで渡す\n    expect(screen.getByText('定期元帳出力画面')).toBeInTheDocument(); \n    expect(screen.getByText('ヘッダー')).toBeInTheDocument();\n  });\n\n  it('出力ボタンクリックでAPIがコールされる', async () => {\n    // Axios のモックを設定\n    mockedAxios.post.mockResolvedValueOnce({ data: {}, status: 200 });\n\n    render(<LedgerOutput />);  // Header コンポーネントをpropsで渡す\n\n    fireEvent.click(screen.getByText('出力'));\n    // API コールの確認\n    expect(mockedAxios.post).toHaveBeenCalledTimes(1); \n  });\n\n  it('APIコール成功時にメッセージが表示される', async () => {\n    mockedAxios.post.mockResolvedValueOnce({ data: {}, status: 200 });\n\n    render(<LedgerOutput />);  // Header コンポーネントをpropsで渡す\n\n    fireEvent.click(screen.getByText('出力'));\n    // 成功メッセージの確認\n    // （実装によりメッセージが変化するため、適切なメッセージに修正）\n    // expect(await screen.findByText('出力に成功しました')).toBeVisible(); \n  });\n\n  it('APIコール失敗時にエラーメッセージが表示される', async () => {\n    mockedAxios.post.mockRejectedValueOnce({ message: 'エラーが発生しました' });\n\n    render(<LedgerOutput />);  // Header コンポーネントをpropsで渡す\n\n    fireEvent.click(screen.getByText('出力'));\n    // （実装によりメッセージが変化するため、適切なメッセージに修正）\n    // expect(await screen.findByText('エラーが発生しました')).toBeVisible();\n  });\n\n  it('出力条件設定フォームの値が正しく設定、取得できる', async () => {\n    render(<LedgerOutput />); // Header コンポーネントをpropsで渡す\n\n    // テストに必要な実装を追加\n    // 例: 出力開始日、出力終了日などの入力フィールド\n  });\n});\"}"
        }
      ]
    },
    {
      "id": "SCR-021",
      "category": "発行スケジュール管理",
      "screenName": "発行予定登録画面",
      "description": "雑誌発行スケジュール（号数、発行予定日）を契約に紐づけて登録する画面。",
      "Screen components": "発行予定登録フォーム（契約ID、号数、発行予定日入力欄）、登録ボタン",
      "operatingProcedure": "契約ID、号数、発行予定日を入力し、登録ボタンをクリックする。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "schedule/register.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-022",
      "category": "発行スケジュール管理",
      "screenName": "未発行管理画面",
      "description": "未発行分の管理を行う画面。",
      "Screen components": "未発行情報表示（契約ID、未発行号数など）、繰越対応ボタン",
      "operatingProcedure": "未発行情報を確認し、必要に応じて繰越対応を行う。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "schedule/unissued.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-023",
      "category": "発送管理",
      "screenName": "発送リスト生成画面",
      "description": "発行スケジュールに基づいて発送リストを生成する画面。",
      "Screen components": "発送リスト生成ボタン",
      "operatingProcedure": "発送リストを生成する。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "shipping/generate_list.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-024",
      "category": "発送管理",
      "screenName": "未発送リスト確認画面",
      "description": "未発送リストを確認する画面。",
      "Screen components": "未発送リスト表示（顧客名、契約ID、発送予定日、発送状況など）、検索フォーム",
      "operatingProcedure": "未発送情報を検索または一覧表示する。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "shipping/unshipped_list.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-025",
      "category": "発送管理",
      "screenName": "再発送指示画面",
      "description": "再発送指示を実行する画面。",
      "Screen components": "再発送指示フォーム（発送ID入力欄）、再発送ボタン",
      "operatingProcedure": "発送IDを入力し、再発送ボタンをクリックする。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "shipping/resend.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-026",
      "category": "請求管理",
      "screenName": "請求担当者メニュー",
      "description": "請求担当者が利用するメニュー画面。各請求管理機能への入り口となる。",
      "Screen components": "メニューボタン（請求対象一覧、未入金一覧など）",
      "operatingProcedure": "メニューボタンをクリックして各機能画面へ遷移する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "BillingMenu.tsx",
      "getData": "[]",
      "postData": "[]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-027",
      "category": "請求管理",
      "screenName": "請求対象一覧",
      "description": "請求対象となる契約の一覧を表示する画面。請求書発行や請求設定への入り口となる。",
      "Screen components": "契約一覧テーブル、検索フォーム、請求書プレビューボタン、分割請求設定ボタン、特別請求設定ボタン、請求履歴一覧ボタン",
      "operatingProcedure": "契約情報を検索・絞り込み、一覧表示する。各ボタンから関連画面へ遷移する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "BillingTargetList.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"customer_id\",\"contract_no\",\"start_issue_no\",\"end_issue_no\",\"total_issues\",\"sent_issues\",\"remaining_issues\",\"contract_pattern\"]}]",
      "postData": "[]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-028",
      "category": "請求管理",
      "screenName": "請求書プレビュー",
      "description": "請求書の発行前に内容を確認する画面。PDF形式で表示。",
      "Screen components": "請求書プレビュー表示（PDF）、請求書一括承認ボタン",
      "operatingProcedure": "請求書の内容をプレビューで確認し、問題なければ一括承認を行う。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "BillingPreview.tsx",
      "getData": "[{\"table\":\"billing_addresses\", \"items\":[\"billing_id\",\"customer_id\",\"billing_code\",\"billing_name\",\"organization_name\",\"representative_name\",\"postal_code\",\"address1\",\"address2\"]},{\"table\":\"pricing\", \"items\":[\"pricing_id\",\"subscription_id\",\"set_price\",\"set_quantity\",\"total_amount\",\"tax_amount\",\"tax_inclusive_total\"]},{\"table\":\"products\", \"items\":[\"product_code\",\"product_name\",\"unit_price\",\"tax_rate\"]},{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"customer_id\",\"contract_no\",\"product_code\"]}]",
      "postData": "[]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-029",
      "category": "請求管理",
      "screenName": "請求書一括承認",
      "description": "プレビュー確認後の請求書を一括で承認する画面。承認処理を実行する。",
      "Screen components": "承認ボタン、キャンセルボタン",
      "operatingProcedure": "請求書の内容を確認し、一括で承認する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "BillingBulkApproval.tsx",
      "getData": "[]",
      "postData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\", \"confirmed_payment_date\"]}]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-030",
      "category": "請求管理",
      "screenName": "請求書送付記録",
      "description": "請求書の送付記録を確認する画面。送付日や送付方法を記録する。",
      "Screen components": "請求書送付記録テーブル",
      "operatingProcedure": "送付記録を確認する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "BillingRecord.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"expected_payment_date\", \"confirmed_payment_date\"]}]",
      "postData": "[]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-031",
      "category": "請求管理",
      "screenName": "分割請求設定",
      "description": "契約期間内の分割請求を設定する画面。請求スケジュールを設定する。",
      "Screen components": "分割請求設定フォーム、請求スケジュール設定",
      "operatingProcedure": "契約IDを基に、分割請求のパターンやスケジュールを設定する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "SplitBillingSetting.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"start_issue_no\",\"end_issue_no\",\"total_issues\"]}]",
      "postData": "[{\"table\":\"pricing\", \"items\":[\"subscription_id\", \"set_price\",\"set_quantity\",\"total_amount\",\"tax_amount\",\"tax_inclusive_total\"]}]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-032",
      "category": "請求管理",
      "screenName": "請求スケジュール",
      "description": "設定された請求スケジュールを表示する画面。確認と編集を行う。",
      "Screen components": "請求スケジュール一覧",
      "operatingProcedure": "請求スケジュールを確認、必要に応じて編集を行う。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "BillingSchedule.tsx",
      "getData": "[{\"table\":\"pricing\", \"items\":[\"pricing_id\",\"subscription_id\",\"set_price\",\"set_quantity\",\"total_amount\",\"tax_amount\",\"tax_inclusive_total\"]}]",
      "postData": "[]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": [
        {
          "id": "BAC-010",
          "category": "アラート機能",
          "handleName": "アラート通知",
          "description": "発行遅延、未発行、都度請求時の未請求、未消込入金などの状況を監視し、アラートを通知する。",
          "handleProcedure": "アラート条件を基に、データベースの契約情報、発行スケジュール、請求情報、入金情報を監視する。設定された条件に合致した場合、アラート情報をデータベースに保存し、設定された通知先に通知を行う。",
          "fileName": "alerts/notification.ts",
          "relatedScreen": "SCR-032",
          "relatedFrontendCode": "{\"code\": \"import { render, screen, act } from '@testing-library/react';\nimport BillingSchedule from '@/pages/BillingSchedule';\nimport { jest } from '@jest/globals';\n\n// モック\njest.mock('axios');\nconst mockedAxios = axios as jest.Mocked<typeof axios>;\njest.mock('@/components/Header', () => () => <div>ヘッダーモック</div>);\njest.mock('@/components/Sidebar', () => () => <div>サイドバーモック</div>);\n\ndescribe('BillingSchedule', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('請求スケジュール一覧が表示されること', async () => {\n    mockedAxios.get.mockResolvedValue({\n      data: [\n        { pricing_id: 1, subscription_id: 1, set_price: 1000, set_quantity: 1, total_amount: 1000, tax_amount: 100, tax_inclusive_total: 1100 },\n        { pricing_id: 2, subscription_id: 2, set_price: 2000, set_quantity: 2, total_amount: 4000, tax_amount: 400, tax_inclusive_total: 4400 },\n      ],\n    });\n\n    render(<BillingSchedule />);  \n    await act(() => Promise.resolve());\n\n    expect(screen.getByText('ヘッダーモック')).toBeInTheDocument();\n    expect(screen.getByText('サイドバーモック')).toBeInTheDocument();\n    expect(screen.getByText('1')).toBeInTheDocument();\n    expect(screen.getByText('1000')).toBeInTheDocument();\n    expect(screen.getByText('2')).toBeInTheDocument();\n    expect(screen.getByText('4000')).toBeInTheDocument();\n  });\n\n  it('データ取得エラー時にエラーメッセージが表示されること', async () => {\n    mockedAxios.get.mockRejectedValue(new Error('APIエラー'));\n\n    render(<BillingSchedule />);\n    await act(() => Promise.resolve());\n\n    expect(screen.getByText('ヘッダーモック')).toBeInTheDocument();\n    expect(screen.getByText('サイドバーモック')).toBeInTheDocument();\n    expect(screen.getByRole('alert')).toHaveTextContent('エラーが発生しました。');\n  });\n});\n\"}"
        }
      ]
    },
    {
      "id": "SCR-033",
      "category": "請求管理",
      "screenName": "特別請求設定",
      "description": "顧客の会計期間に応じた特別請求を設定する画面。請求スケジュールを設定する。",
      "Screen components": "特別請求設定フォーム、請求スケジュール設定",
      "operatingProcedure": "契約IDを基に、特別請求のパターンやスケジュールを設定する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "SpecialBillingSetting.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"start_issue_no\",\"end_issue_no\",\"total_issues\"]}]",
      "postData": "[{\"table\":\"pricing\", \"items\":[\"subscription_id\", \"set_price\",\"set_quantity\",\"total_amount\",\"tax_amount\",\"tax_inclusive_total\"]}]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-034",
      "category": "請求管理",
      "screenName": "未入金一覧",
      "description": "未入金の契約を一覧表示する画面。入金データ消込への入り口となる。",
      "Screen components": "未入金一覧テーブル、検索フォーム、入金データ消込ボタン",
      "operatingProcedure": "未入金情報を検索・絞り込み、一覧表示する。入金データ消込画面へ遷移する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "UnpaidList.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"expected_payment_date\", \"confirmed_payment_date\"]},{\"table\":\"customers\", \"items\":[\"customer_id\",\"name\"]}]",
      "postData": "[]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-035",
      "category": "請求管理",
      "screenName": "入金データ消込",
      "description": "入金データを基に、未入金情報の消込を行う画面。消込承認への入り口となる。",
      "Screen components": "入金データ消込フォーム、消込候補一覧、消込承認ボタン",
      "operatingProcedure": "入金データをアップロードし、消込候補を確認後、消込承認を行う。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "PaymentMatching.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"expected_payment_date\", \"confirmed_payment_date\"]},{\"table\":\"customers\", \"items\":[\"customer_id\",\"name\"]}]",
      "postData": "[]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-036",
      "category": "請求管理",
      "screenName": "消込承認",
      "description": "消込処理を承認する画面。入金履歴一覧への入り口となる。",
      "Screen components": "消込承認ボタン、キャンセルボタン",
      "operatingProcedure": "消込処理を確認後、承認を行う。入金履歴一覧画面へ遷移する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "PaymentApproval.tsx",
      "getData": "[]",
      "postData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\", \"confirmed_payment_date\"]}]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-037",
      "category": "請求管理",
      "screenName": "入金履歴一覧",
      "description": "入金履歴を一覧表示する画面。入金詳細への入り口となる。",
      "Screen components": "入金履歴一覧テーブル、検索フォーム、入金詳細ボタン",
      "operatingProcedure": "入金履歴を検索・絞り込み、一覧表示する。入金詳細画面へ遷移する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "PaymentHistoryList.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"expected_payment_date\", \"confirmed_payment_date\"]},{\"table\":\"customers\", \"items\":[\"customer_id\",\"name\"]}]",
      "postData": "[]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-038",
      "category": "請求管理",
      "screenName": "入金詳細",
      "description": "選択された入金履歴の詳細を表示する画面。",
      "Screen components": "入金詳細情報表示",
      "operatingProcedure": "選択された入金履歴の詳細情報を確認する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "PaymentDetail.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"expected_payment_date\", \"confirmed_payment_date\"]},{\"table\":\"customers\", \"items\":[\"customer_id\",\"name\"]}]",
      "postData": "[]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-039",
      "category": "請求管理",
      "screenName": "請求履歴一覧",
      "description": "過去の請求履歴を一覧表示する画面。請求詳細への入り口となる。",
      "Screen components": "請求履歴一覧テーブル、検索フォーム、請求詳細ボタン",
      "operatingProcedure": "請求履歴を検索・絞り込み、一覧表示する。請求詳細画面へ遷移する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "BillingHistoryList.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"contract_no\",\"expected_payment_date\", \"confirmed_payment_date\"]},{\"table\":\"customers\", \"items\":[\"customer_id\",\"name\"]}]",
      "postData": "[]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-040",
      "category": "請求管理",
      "screenName": "請求詳細",
      "description": "選択された請求の明細を表示する画面",
      "Screen components": "請求詳細情報表示",
      "operatingProcedure": "選択された請求の詳細情報を確認する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "BillingDetail.tsx",
      "getData": "[{\"table\":\"billing_addresses\", \"items\":[\"billing_id\",\"customer_id\",\"billing_code\",\"billing_name\",\"organization_name\",\"representative_name\",\"postal_code\",\"address1\",\"address2\"]},{\"table\":\"pricing\", \"items\":[\"pricing_id\",\"subscription_id\",\"set_price\",\"set_quantity\",\"total_amount\",\"tax_amount\",\"tax_inclusive_total\"]},{\"table\":\"products\", \"items\":[\"product_code\",\"product_name\",\"unit_price\",\"tax_rate\"]},{\"table\":\"subscriptions\", \"items\":[\"subscription_id\",\"customer_id\",\"contract_no\",\"product_code\"]}]",
      "postData": "[]",
      "commonComponent": "[\"Header.tsx\",\"Sidebar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-041",
      "category": "発行スケジュール管理",
      "screenName": "発行スケジュール管理TOP",
      "description": "発行スケジュール管理機能のトップ画面。各機能へのナビゲーションを提供する。",
      "Screen components": "メニューバー、発行スケジュール一覧へのリンク、未発行一覧へのリンク、登録ボタン",
      "operatingProcedure": "システムにログイン後、メニューから「発行スケジュール管理」を選択すると表示される。各機能へはリンクまたはボタンから遷移する。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "schedule/index.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-042",
      "category": "発行スケジュール管理",
      "screenName": "発行スケジュール一覧",
      "description": "登録された発行スケジュールの一覧を表示する画面。",
      "Screen components": "テーブル、検索フォーム、ソート機能、ページネーション、発行予定登録ボタン、詳細ボタン、未発行一覧へのリンク",
      "operatingProcedure": "発行スケジュール管理TOPから「発行スケジュール一覧」を選択すると表示される。検索フォームで条件を絞り込み、ソート機能で並び順を変更できる。発行予定登録は登録ボタンから、詳細は詳細ボタンから遷移する。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "schedule/list.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\": [\"subscription_id\",\"contract_no\"]}, {\"table\":\"products\", \"items\": [\"product_name\"]},{\"table\":\"schedule\", \"items\": [\"schedule_id\", \"issue_no\", \"scheduled_date\", \"actual_date\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-043",
      "category": "発行スケジュール管理",
      "screenName": "発行スケジュール詳細",
      "description": "登録された発行スケジュールの詳細情報を表示する画面。",
      "Screen components": "詳細情報表示エリア、発行実績登録ボタン、編集ボタン、削除ボタン、戻るボタン",
      "operatingProcedure": "発行スケジュール一覧で詳細ボタンを押すと表示される。発行実績登録は発行実績登録ボタンから、編集は編集ボタンから、削除は削除ボタンから遷移する。戻るボタンで一覧に戻る。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "schedule/[scheduleId].tsx",
      "getData": "[{\"table\":\"schedule\", \"items\": [\"schedule_id\", \"subscription_id\", \"issue_no\", \"scheduled_date\", \"actual_date\", \"is_sent\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-044",
      "category": "発行スケジュール管理",
      "screenName": "発行実績登録画面",
      "description": "発行実績（発行日、発送完了情報）を登録・更新する画面。",
      "Screen components": "フォーム（発行日、発送完了情報）、登録ボタン、キャンセルボタン",
      "operatingProcedure": "発行スケジュール詳細から「発行実績登録」ボタンを選択すると表示される。フォームに必要事項を入力し、登録ボタンを押すと登録が完了する。キャンセルボタンを押すと発行スケジュール詳細に戻る。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "schedule/[scheduleId]/actual.tsx",
      "getData": "[{\"table\":\"schedule\", \"items\": [\"schedule_id\",\"issue_no\", \"scheduled_date\", \"actual_date\", \"is_sent\"]}]",
      "postData": "[{\"table\":\"schedule\", \"items\": [\"actual_date\", \"is_sent\"]}]",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-045",
      "category": "発行スケジュール管理",
      "screenName": "未発行一覧画面",
      "description": "未発行のスケジュールを一覧表示する画面。",
      "Screen components": "テーブル、検索フォーム、ソート機能、ページネーション、繰越処理ボタン",
      "operatingProcedure": "発行スケジュール管理TOPまたは発行スケジュール一覧から「未発行一覧」を選択すると表示される。検索フォームで条件を絞り込み、ソート機能で並び順を変更できる。繰越処理は繰越処理ボタンから遷移する。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "schedule/unissued.tsx",
      "getData": "[{\"table\":\"schedule\", \"items\": [\"schedule_id\",\"subscription_id\", \"issue_no\", \"scheduled_date\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-046",
      "category": "発行スケジュール管理",
      "screenName": "繰越処理画面",
      "description": "未発行分の次期契約への繰越処理を行う画面。",
      "Screen components": "繰越対象一覧、繰越実行ボタン、キャンセルボタン",
      "operatingProcedure": "未発行一覧画面から「繰越処理」ボタンを選択すると表示される。繰越対象を確認し、繰越実行ボタンを押すと繰越処理が実行される。キャンセルボタンを押すと未発行一覧に戻る。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "schedule/carryforward.tsx",
      "getData": "[{\"table\":\"schedule\", \"items\": [\"schedule_id\",\"subscription_id\", \"issue_no\", \"scheduled_date\"]}]",
      "postData": "[{\"table\":\"schedule\", \"items\": [\"is_carried_forward\"]}]",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-047",
      "category": "契約管理",
      "screenName": "契約登録画面",
      "description": "顧客と契約内容（購読開始日、終了日、請求パターン）をシステムに登録する画面。",
      "Screen components": "フォーム（顧客ID、購読開始日、終了日、請求パターン）、登録ボタン、キャンセルボタン",
      "operatingProcedure": "メニューから「契約管理」を選択し、「新規契約登録」ボタンをクリックして表示する。フォームに必要情報を入力し、登録ボタンで登録が完了する。キャンセルボタンを押すと前の画面に戻る。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "subscriptions/register.tsx",
      "getData": "[{\"table\":\"customers\", \"items\": [\"customer_id\", \"name\"]},{\"table\":\"products\", \"items\": [\"product_code\", \"product_name\"]}]",
      "postData": "[{\"table\":\"subscriptions\", \"items\": [\"customer_id\", \"product_code\", \"contract_no\", \"contract_date\", \"initial_register_date\",\"start_issue_no\", \"end_issue_no\", \"total_issues\",\"continuation_flag\", \"application_method\", \"payment_method\", \"contract_pattern\",\"expected_payment_date\", \"cancellation_type\", \"gift_shipping_flag\", \"renewal_notice_flag\"]}]",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-048",
      "category": "請求管理",
      "screenName": "請求書自動生成画面",
      "description": "請求方式（前金、都度、完納）に応じて請求書を自動生成する画面。",
      "Screen components": "請求書生成条件フォーム、請求書生成ボタン、キャンセルボタン",
      "operatingProcedure": "メニューから「請求管理」を選択し、「請求書自動生成」をクリックすると表示される。請求書生成条件を選択し、請求書生成ボタンを押すと請求書が生成される。キャンセルボタンを押すと前の画面に戻る。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "billing/generate.tsx",
      "getData": "[{\"table\":\"subscriptions\", \"items\": [\"subscription_id\", \"contract_no\", \"payment_method\", \"contract_pattern\"]}]",
      "postData": "[{\"table\":\"billings\", \"items\": [\"subscription_id\", \"billing_date\", \"billing_amount\", \"payment_status\"]}]",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": [
        {
          "id": "BAC-003",
          "category": "請求管理",
          "handleName": "請求書自動生成",
          "description": "契約情報に基づき、請求書を自動生成する。",
          "handleProcedure": "契約ID、請求方式（前金、都度、完納）を受け取り、データベースから契約情報、顧客情報を取得し、請求書データを生成する。請求書データをデータベースに保存し、請求書IDを発行する。",
          "fileName": "billing/generate_invoice.ts",
          "relatedScreen": "SCR-048",
          "relatedFrontendCode": "{\"code\": \"import { render, screen, fireEvent } from '@testing-library/react';\nimport { jest } from '@jest/globals';\nimport axios from 'axios';\nimport Generate from '@/pages/billing/generate';\n\n// モック\njest.mock('axios');\nconst mockedAxios = axios as jest.Mocked<typeof axios>;\n\ndescribe('請求書自動生成画面', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('コンポーネントが正しくレンダリングされる', () => {\n    render(<Generate />); // モック化したコンポーネントをレンダリング\n    expect(screen.getByText('請求書自動生成画面')).toBeInTheDocument(); // 画面タイトルが存在することを確認\n  });\n\n  it('請求書生成ボタンがクリックされたときにAPIリクエストが送信される', async () => {\n    // モックデータ\n    const mockResponse = { data: { message: '請求書が生成されました' } };\n    mockedAxios.post.mockResolvedValue(mockResponse);\n\n    render(<Generate />);\n\n    // ボタンクリックをシミュレート\n    fireEvent.click(screen.getByText('請求書生成'));\n\n    // APIリクエストが正しいエンドポイントに送信されたことを確認\n    expect(mockedAxios.post).toHaveBeenCalledWith('/api/billings', {});\n\n    // 請求書生成成功メッセージが表示されることを確認\n    expect(await screen.findByText('請求書が生成されました')).toBeVisible();\n  });\n\n  it('キャンセルボタンがクリックされたときに前の画面に戻る', () => {\n    render(<Generate />);\n\n    const mockRouter = {\n      back: jest.fn()\n    };\n    jest.mock('next/navigation', () => ({\n      useRouter: () => mockRouter,\n    }));\n\n    fireEvent.click(screen.getByText('キャンセル'));\n    expect(mockRouter.back).toHaveBeenCalledTimes(1);\n  });\n\n  describe('Header.tsx', () => {\n    it('Header コンポーネントが表示される', () => {\n      render(<Generate />);\n      expect(screen.getByRole('heading', { name: 'ヘッダー' })).toBeInTheDocument();\n    });\n  });\n\n  describe('SideMenu.tsx', () => {\n    it('SideMenu コンポーネントが表示される', () => {\n      render(<Generate />);\n      expect(screen.getByRole('navigation', { name: 'サイドメニュー' })).toBeInTheDocument();\n    });\n  });\n});\n\"}"
        }
      ]
    },
    {
      "id": "SCR-049",
      "category": "請求管理",
      "screenName": "請求書送付記録更新画面",
      "description": "請求書の送付記録を更新する画面。",
      "Screen components": "請求書一覧、送付記録更新ボタン、キャンセルボタン",
      "operatingProcedure": "メニューから「請求管理」を選択し、「請求書送付記録更新」をクリックすると表示される。請求書一覧から対象を選択し、送付記録更新ボタンで更新する。キャンセルボタンを押すと前の画面に戻る。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "billing/send.tsx",
      "getData": "[{\"table\":\"billings\", \"items\": [\"billing_id\", \"subscription_id\", \"billing_date\", \"billing_amount\", \"payment_status\"]}]",
      "postData": "[{\"table\":\"billings\", \"items\": [\"sent_date\"]}]",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-050",
      "category": "請求管理",
      "screenName": "入金データ自動消込画面",
      "description": "入金データを自動で消込処理する画面。銀行振込CSVを取り込んで、未入金候補と比較することも可能",
      "Screen components": "入金データアップロードフォーム、消込実行ボタン、キャンセルボタン",
      "operatingProcedure": "メニューから「請求管理」を選択し、「入金データ自動消込」をクリックすると表示される。入金データCSVファイルをアップロードし、消込実行ボタンを押すと自動消込が実行される。キャンセルボタンを押すと前の画面に戻る。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "billing/reconcile.tsx",
      "getData": "[{\"table\":\"billings\", \"items\": [\"billing_id\", \"subscription_id\", \"billing_amount\", \"payment_status\"]}]",
      "postData": "[{\"table\":\"payments\", \"items\": [\"billing_id\", \"payment_date\", \"payment_amount\", \"payment_method\"]}]",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": [
        {
          "id": "BAC-004",
          "category": "請求管理",
          "handleName": "入金データ自動消込",
          "description": "入金データを自動で消込処理する。",
          "handleProcedure": "銀行振込CSVデータを受け取り、未入金情報をデータベースから取得する。CSVデータと未入金情報を比較し、消込処理を行う。消込結果をデータベースに保存し、消込結果を返す。",
          "fileName": "billing/payment_reconciliation.ts",
          "relatedScreen": "SCR-050",
          "relatedFrontendCode": "{\"code\": \"import { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport Reconcile from '@/pages/billing/reconcile';\n\n// モック\njest.mock('axios');\nconst mockedAxios = axios as jest.Mocked<typeof axios>;\n\ndescribe('入金データ自動消込画面', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('画面が表示されること', () => {\n    render(<Reconcile />);\n    expect(screen.getByText('入金データ自動消込画面')).toBeInTheDocument();\n  });\n\n  it('入金データCSVファイルがアップロードできること', async () => {\n    render(<Reconcile />);\n    const fileInput = screen.getByLabelText('CSVファイルを選択') as HTMLInputElement;\n    const file = new File([''], 'test.csv', { type: 'text/csv' });\n    fireEvent.change(fileInput, { target: { files: [file] } });\n    // ファイルがアップロードされたことを確認\n    expect(fileInput.files?.[0].name).toBe('test.csv');\n  });\n\n  it('消込実行ボタンがクリックできること', async () => {\n    render(<Reconcile />);\n    const button = screen.getByRole('button', { name: '消込実行' });\n    fireEvent.click(button);\n    // API 呼び出しが実行されたことを確認\n  });\n\n  it('キャンセルボタンがクリックできること', async () => {\n    render(<Reconcile />);\n    const button = screen.getByRole('button', { name: 'キャンセル' });\n    fireEvent.click(button);\n    // 画面遷移が実行されたことを確認\n  });\n\n  it('データ取得処理が成功した場合、データが表示されること', async () => {\n    // モックデータをセット\n    mockedAxios.get.mockResolvedValue({ data: [], status: 200 });\n    render(<Reconcile />);    \n    // データが表示されていることを確認\n  });\n\n  it('データ取得処理が失敗した場合、エラーメッセージが表示されること', async () => {\n    mockedAxios.get.mockRejectedValue({ message: 'エラーが発生しました', status: 500 });\n    render(<Reconcile />);\n    // エラーメッセージが表示されていることを確認\n  });\n\n\n  describe('Header.tsx と SideMenu.tsx のテスト', () => {\n    it('Header.tsx が表示されること', () => {\n      render(<Reconcile />);\n      // Header.tsx に含まれる要素の存在を確認\n    });\n\n    it('SideMenu.tsx が表示されること', () => {\n      render(<Reconcile />);\n      // SideMenu.tsx に含まれる要素の存在を確認\n    });\n  });\n});\n\"}"
        }
      ]
    },
    {
      "id": "SCR-051",
      "category": "顧客管理",
      "screenName": "顧客情報修正画面",
      "description": "顧客情報を修正する画面。",
      "Screen components": "フォーム（顧客情報）、更新ボタン、キャンセルボタン",
      "operatingProcedure": "顧客一覧画面から編集ボタンを押すと表示される。フォームに修正情報を入力し、更新ボタンで更新が完了する。キャンセルボタンを押すと前の画面に戻る。",
      "user": "顧客対応担当者",
      "accessRight": "loged-in user",
      "fileName": "customers/[customerId]/edit.tsx",
      "getData": "[{\"table\":\"customers\", \"items\": [\"customer_id\", \"customer_code\", \"name\", \"furigana\", \"gender\", \"birth_date\", \"age\", \"organization_name\", \"representative_name\", \"job_title\", \"postal_code\", \"address1\", \"address2\", \"email\", \"phone\", \"notes\", \"warning_flag\"]}]",
      "postData": "[{\"table\":\"customers\", \"items\": [\"name\", \"furigana\", \"gender\", \"birth_date\", \"age\", \"organization_name\", \"representative_name\", \"job_title\", \"postal_code\", \"address1\", \"address2\", \"email\", \"phone\", \"notes\", \"warning_flag\"]}]",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-052",
      "category": "商品管理",
      "screenName": "商品マスタ管理画面",
      "description": "商品マスタを管理する画面。",
      "Screen components": "テーブル、検索フォーム、ソート機能、ページネーション、商品登録・修正ボタン",
      "operatingProcedure": "メニューから「商品管理」を選択し、「商品マスタ管理」をクリックすると表示される。検索フォームで条件を絞り込み、ソート機能で並び順を変更できる。新規商品登録・修正は商品登録・修正ボタンから遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "products/list.tsx",
      "getData": "[{\"table\":\"products\", \"items\": [\"product_code\", \"product_name\", \"product_description\", \"unit_price\", \"tax_rate\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-053",
      "category": "アラート機能",
      "screenName": "アラート通知画面",
      "description": "発行遅延、未発行、都度請求時の未請求、未消込入金などの状況をアラートで通知する画面。",
      "Screen components": "アラート一覧表示エリア",
      "operatingProcedure": "システムにログインすると自動的に表示され、アラート内容を確認できる。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "alert/notification.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\", \"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-054",
      "category": "共通",
      "screenName": "メニュー画面",
      "description": "システム全体のメニューを表示する画面。",
      "Screen components": "メニュー項目（各機能へのリンクボタン）",
      "operatingProcedure": "各機能へのリンクボタンをクリックして、該当画面へ遷移する。",
      "user": "全ユーザー",
      "accessRight": "loged-in user",
      "fileName": "menu.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-055",
      "category": "発送管理",
      "screenName": "発送管理メイン画面",
      "description": "発送管理機能のメイン画面。",
      "Screen components": "発送リスト生成ボタン、未発送リスト確認ボタン、再発送指示ボタン",
      "operatingProcedure": "各ボタンをクリックして、該当画面へ遷移する。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "shipping/index.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-056",
      "category": "発送管理",
      "screenName": "発送リストプレビュー画面",
      "description": "生成された発送リストをプレビューする画面。",
      "Screen components": "発送リスト表示テーブル、発送リスト出力ボタン、戻るボタン",
      "operatingProcedure": "発送リストを確認し、問題なければ発送リスト出力ボタンをクリックして発送リスト出力完了画面へ遷移する。または、戻るボタンをクリックして発送リスト生成画面へ遷移する。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "shipping/preview.tsx",
      "getData": "[{\"table\":\"発送リスト\",\"items\":[\"発送ID\",\"顧客ID\",\"住所\",\"宛名\",\"商品名\",\"号数\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-057",
      "category": "発送管理",
      "screenName": "発送リスト出力完了画面",
      "description": "発送リストの出力が完了したことを表示する画面。",
      "Screen components": "完了メッセージ、メニューへ戻るボタン",
      "operatingProcedure": "完了メッセージを確認し、メニューへ戻るボタンをクリックしてメニュー画面へ遷移する。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "shipping/complete.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-058",
      "category": "発送管理",
      "screenName": "未発送詳細画面",
      "description": "未発送リストの詳細を表示する画面。",
      "Screen components": "未発送詳細情報、再発送指示ボタン、戻るボタン",
      "operatingProcedure": "未発送の詳細情報を確認し、再発送指示ボタンをクリックして再発送指示画面へ遷移する。または、戻るボタンをクリックして未発送リスト確認画面へ遷移する。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "shipping/unshipped/[id].tsx",
      "getData": "[{\"table\":\"発送リスト\",\"items\":[\"発送ID\",\"顧客ID\",\"住所\",\"宛名\",\"商品名\",\"号数\"]}],{\"table\":\"発行スケジュール\",\"items\":[\"発行予定ID\",\"発行日\",\"発送完了情報\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-059",
      "category": "発送管理",
      "screenName": "再発送指示完了画面",
      "description": "再発送指示が完了したことを表示する画面。",
      "Screen components": "完了メッセージ、メニューへ戻るボタン",
      "operatingProcedure": "完了メッセージを確認し、メニューへ戻るボタンをクリックしてメニュー画面へ遷移する。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "shipping/reship/complete.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-060",
      "category": "レポートとデータ出力",
      "screenName": "レポート出力画面",
      "description": "レポート出力機能のトップ画面。レポート種別選択画面への遷移ボタンを持つ。",
      "Screen components": "ボタン（レポート種別選択へ）",
      "operatingProcedure": "レポート種別選択ボタンをクリックして、レポート種別選択画面へ遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "report/index.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-061",
      "category": "レポートとデータ出力",
      "screenName": "レポート種別選択画面",
      "description": "出力するレポートの種類を選択する画面。",
      "Screen components": "ラジオボタン（契約者一覧表、売上一覧表、入金集計表、ラベル、発送データ、定期元帳）、ボタン（次へ）",
      "operatingProcedure": "出力したいレポートの種類をラジオボタンで選択し、次へボタンをクリックして、該当の出力条件画面へ遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "report/select.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-062",
      "category": "レポートとデータ出力",
      "screenName": "契約者一覧表出力条件画面",
      "description": "契約者一覧表の出力条件を設定する画面。",
      "Screen components": "フォーム（期間指定、契約ステータス指定など）、ボタン（ダウンロード）",
      "operatingProcedure": "出力したい契約者一覧表の期間やステータスなどの条件を指定し、ダウンロードボタンをクリックして、ダウンロード画面へ遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "report/contract.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-063",
      "category": "レポートとデータ出力",
      "screenName": "売上一覧表出力条件画面",
      "description": "売上一覧表の出力条件を設定する画面。",
      "Screen components": "フォーム（期間指定、商品指定など）、ボタン（ダウンロード）",
      "operatingProcedure": "出力したい売上一覧表の期間や商品などの条件を指定し、ダウンロードボタンをクリックして、ダウンロード画面へ遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "report/sales.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-064",
      "category": "レポートとデータ出力",
      "screenName": "入金集計表出力条件画面",
      "description": "入金集計表の出力条件を設定する画面。",
      "Screen components": "フォーム（期間指定、入金ステータス指定など）、ボタン（ダウンロード）",
      "operatingProcedure": "出力したい入金集計表の期間や入金ステータスなどの条件を指定し、ダウンロードボタンをクリックして、ダウンロード画面へ遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "report/payment.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-065",
      "category": "レポートとデータ出力",
      "screenName": "ラベル出力条件画面",
      "description": "ラベルデータの出力条件を設定する画面。",
      "Screen components": "フォーム（発送日指定、顧客属性指定など）、ボタン（ダウンロード）",
      "operatingProcedure": "出力したいラベルデータの発送日や顧客属性などの条件を指定し、ダウンロードボタンをクリックして、ダウンロード画面へ遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "report/label.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-066",
      "category": "レポートとデータ出力",
      "screenName": "発送データ出力条件画面",
      "description": "発送データの出力条件を設定する画面。",
      "Screen components": "フォーム（発送日指定、発送方法指定など）、ボタン（ダウンロード）",
      "operatingProcedure": "出力したい発送データの発送日や発送方法などの条件を指定し、ダウンロードボタンをクリックして、ダウンロード画面へ遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "report/shipping.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-067",
      "category": "レポートとデータ出力",
      "screenName": "定期元帳出力条件画面",
      "description": "定期元帳の出力条件を設定する画面。",
      "Screen components": "フォーム（期間指定、契約者指定など）、ボタン（ダウンロード）",
      "operatingProcedure": "出力したい定期元帳の期間や契約者などの条件を指定し、ダウンロードボタンをクリックして、ダウンロード画面へ遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "report/ledger.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-068",
      "category": "レポートとデータ出力",
      "screenName": "ダウンロード画面",
      "description": "レポートデータがダウンロードされる画面。",
      "Screen components": "ダウンロードリンク",
      "operatingProcedure": "ダウンロードリンクをクリックして、レポートデータをダウンロードする。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "report/download.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-069",
      "category": "レポートとデータ出力",
      "screenName": "レポート出力完了画面",
      "description": "レポート出力が完了したことを知らせる画面。",
      "Screen components": "メッセージ（レポート出力完了）、ボタン（メニューへ）",
      "operatingProcedure": "メニューへボタンをクリックして、メニュー画面へ遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "report/complete.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-070",
      "category": "契約管理",
      "screenName": "契約情報登録画面",
      "description": "新規契約情報を登録する画面。",
      "Screen components": "フォーム（契約情報入力フィールド）、ボタン（登録）",
      "operatingProcedure": "契約情報を入力し、登録ボタンをクリックして契約情報を登録する。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contract/subscription/register.tsx",
      "getData": "[{table:'customers',items:['customer_id','customer_code','name']}, {table:'products',items:['product_code','product_name']}]",
      "postData": "[{table:'subscriptions',items:['subscription_id','customer_id','contract_no','contract_date','initial_register_date','field_category','product_code','start_issue_no','end_issue_no','total_issues','sent_issues','remaining_issues','last_sent_issue_no','continuation_flag','application_method','payment_method','contract_pattern','expected_payment_date','confirmed_payment_date','cancellation_type','gift_shipping_flag','renewal_notice_flag']}]",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-071",
      "category": "契約管理",
      "screenName": "契約更新案内書類生成画面",
      "description": "契約更新案内書類を生成する画面。",
      "Screen components": "フォーム（契約ID入力フィールド）、ボタン（生成）",
      "operatingProcedure": "契約IDを入力し、生成ボタンをクリックして契約更新案内書類を生成する。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contract/renewal/generate.tsx",
      "getData": "[{table:'subscriptions',items:['subscription_id','contract_no']}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-072",
      "category": "契約管理",
      "screenName": "契約情報検索画面",
      "description": "契約者情報や契約内容の詳細を検索する画面。",
      "Screen components": "フォーム（検索条件入力フィールド）、ボタン（検索）、契約情報一覧表示",
      "operatingProcedure": "検索条件を入力し、検索ボタンをクリックして契約情報を検索し、結果を表示する。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contract/search.tsx",
      "getData": "[{table:'customers',items:['customer_id','customer_code','name']},{table:'subscriptions',items:['subscription_id','contract_no','contract_date','product_code']}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-073",
      "category": "契約管理",
      "screenName": "契約情報一覧表示画面",
      "description": "契約情報を一覧表示する画面。",
      "Screen components": "契約情報一覧表示",
      "operatingProcedure": "契約情報を一覧で表示する。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contract/list.tsx",
      "getData": "[{table:'customers',items:['customer_id','customer_code','name']},{table:'subscriptions',items:['subscription_id','contract_no','contract_date','product_code']}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-074",
      "category": "契約管理",
      "screenName": "契約チェックリスト生成画面",
      "description": "契約の整合性を確認するためのチェックリストを生成する画面。",
      "Screen components": "フォーム（契約ID入力フィールド）、ボタン（生成）",
      "operatingProcedure": "契約IDを入力し、生成ボタンをクリックして契約チェックリストを生成する。",
      "user": "契約担当者",
      "accessRight": "loged-in user",
      "fileName": "contract/checklist.tsx",
      "getData": "[{table:'subscriptions',items:['subscription_id','contract_no']}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-075",
      "category": "請求管理",
      "screenName": "分割請求設定画面",
      "description": "契約期間内の分割請求設定を管理する画面。",
      "Screen components": "フォーム（契約ID入力フィールド、分割請求設定入力フィールド）、ボタン（設定）",
      "operatingProcedure": "契約IDと分割請求設定を入力し、設定ボタンをクリックして分割請求設定を管理する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "billing/split/setting.tsx",
      "getData": "[{table:'subscriptions',items:['subscription_id','contract_no']}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-076",
      "category": "請求管理",
      "screenName": "特別請求管理画面",
      "description": "顧客の会計期間に応じた特別請求を管理する画面。",
      "Screen components": "フォーム（契約ID入力フィールド、特別請求設定入力フィールド）、ボタン（設定）",
      "operatingProcedure": "契約IDと特別請求設定を入力し、設定ボタンをクリックして特別請求を管理する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "billing/special/manage.tsx",
      "getData": "[{table:'subscriptions',items:['subscription_id','contract_no']}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-077",
      "category": "請求管理",
      "screenName": "消込承認画面",
      "description": "消込処理を確認後に承認する画面。",
      "Screen components": "消込候補表示、ボタン（承認）",
      "operatingProcedure": "消込候補を確認し、承認ボタンをクリックして消込処理を承認する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "billing/payment/approve.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-078",
      "category": "請求管理",
      "screenName": "入金履歴管理画面",
      "description": "入金履歴を管理する画面。",
      "Screen components": "フォーム（契約ID入力フィールド）、入金履歴表示",
      "operatingProcedure": "契約IDを入力し、入金履歴を表示する。",
      "user": "請求担当者",
      "accessRight": "loged-in user",
      "fileName": "billing/payment/history.tsx",
      "getData": "[{table:'subscriptions',items:['subscription_id','contract_no']}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-079",
      "category": "発行スケジュール管理",
      "screenName": "発行実績記録画面",
      "description": "発行日や発送完了情報を更新する画面。",
      "Screen components": "フォーム（発行予定ID入力フィールド、発行日入力フィールド、発送完了情報入力フィールド）、ボタン（更新）",
      "operatingProcedure": "発行予定ID、発行日、発送完了情報を入力し、更新ボタンをクリックして発行実績を更新する。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "schedule/update.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-080",
      "category": "発行スケジュール管理",
      "screenName": "次期契約への繰越対応画面",
      "description": "未発行分の次期契約への繰越対応を行う画面。",
      "Screen components": "フォーム（契約ID入力フィールド、未発行情報入力フィールド）、ボタン（繰越）",
      "operatingProcedure": "契約IDと未発行情報を入力し、繰越ボタンをクリックして次期契約への繰越処理を行う。",
      "user": "発送担当者",
      "accessRight": "loged-in user",
      "fileName": "schedule/carryover.tsx",
      "getData": "[{table:'subscriptions',items:['subscription_id','contract_no']}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-081",
      "category": "顧客管理",
      "screenName": "顧客情報登録・修正画面",
      "description": "顧客情報を登録、修正する画面。",
      "Screen components": "フォーム（顧客情報入力フィールド）、ボタン（登録/修正）",
      "operatingProcedure": "顧客情報を入力し、登録または修正ボタンをクリックして顧客情報を登録または修正する。",
      "user": "顧客対応担当者",
      "accessRight": "loged-in user",
      "fileName": "customer/register.tsx",
      "getData": "[{table:'customers',items:['customer_id','customer_code','name','furigana','gender','birth_date','age','organization_name','representative_name','job_title','postal_code','address1','address2','email','phone','notes','warning_flag']}]",
      "postData": "[{table:'customers',items:['customer_id','customer_code','name','furigana','gender','birth_date','age','organization_name','representative_name','job_title','postal_code','address1','address2','email','phone','notes','warning_flag']}]",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-082",
      "category": "顧客管理",
      "screenName": "特別リクエスト履歴管理画面",
      "description": "顧客の会計期間調整や発行遅延対応の履歴を記録する画面。",
      "Screen components": "フォーム（顧客ID入力フィールド、リクエスト内容入力フィールド）、ボタン（記録）",
      "operatingProcedure": "顧客IDとリクエスト内容を入力し、記録ボタンをクリックして履歴を記録する。",
      "user": "顧客対応担当者",
      "accessRight": "loged-in user",
      "fileName": "customer/request.tsx",
      "getData": "[{table:'customers',items:['customer_id','customer_code','name']}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-083",
      "category": "商品管理",
      "screenName": "商品CSV出力画面",
      "description": "商品情報をCSV形式で出力する画面。",
      "Screen components": "フォーム（出力条件設定）、ボタン（ダウンロード）",
      "operatingProcedure": "出力条件を設定し、ダウンロードボタンをクリックして商品情報をCSV形式でダウンロードする。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "product/csv.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"SideMenu.tsx\"]",
      "relatedBackendHandles": [
        {
          "id": "BAC-009",
          "category": "商品管理",
          "handleName": "商品CSV出力",
          "description": "商品情報をCSV形式で出力する。",
          "handleProcedure": "出力条件を受け取り、データベースから商品情報を取得する。取得した情報を基にCSV形式のデータを作成し、クライアントに返す。",
          "fileName": "products/export_csv.ts",
          "relatedScreen": "SCR-083",
          "relatedFrontendCode": "{\"code\": \"import { render, screen, fireEvent } from '@testing-library/react';\nimport { jest } from '@jest/globals';\nimport ProductCSV from '@/pages/product/csv';\n\ndescribe('商品CSV出力画面', () => {\n  test('HeaderとSideMenuコンポーネントが表示される', () => {\n    render(<ProductCSV />);  \n    expect(screen.getByRole('heading', { name: 'ヘッダー' })).toBeInTheDocument(); // Header.tsx\n    expect(screen.getByRole('navigation', { name: 'サイドメニュー' })).toBeInTheDocument(); // SideMenu.tsx\n  });\n\n  test('ダウンロードボタンのクリックでCSVダウンロード処理が開始される', async () => {\n    // モック関数\n    const mockDownloadCSV = jest.fn();\n    render(<ProductCSV downloadCSV={mockDownloadCSV} />); \n    fireEvent.click(screen.getByRole('button', { name: 'ダウンロード' }));\n    expect(mockDownloadCSV).toHaveBeenCalledTimes(1);\n  });\n\n  test('CSVダウンロード処理中のローディング表示', () => {\n    // モック関数\n    let isLoading = true;\n    const setIsLoading = (value: boolean) => {\n      isLoading = value;\n    };\n    render(<ProductCSV isLoadingCSV={isLoading} setIsLoadingCSV={setIsLoading} />); \n    expect(screen.getByRole('progressbar', { name: '処理中...' })).toBeInTheDocument();\n\n    isLoading = false;\n    render(<ProductCSV isLoadingCSV={isLoading} setIsLoadingCSV={setIsLoading} />); \n    expect(screen.queryByRole('progressbar')).not.toBeInTheDocument(); // ローディング表示が消えている\n  });\n\n  test('エラーメッセージが表示される', () => {\n    const errorMessage = 'エラーが発生しました。';\n    render(<ProductCSV downloadError={errorMessage} />);\n    expect(screen.getByRole('alert')).toHaveTextContent(errorMessage);\n  });\n\n\n  describe('出力条件設定フォーム', () => {\n    test('商品IDの入力', () => {\n      render(<ProductCSV />);\n      const productIdInput = screen.getByLabelText('商品ID');\n      fireEvent.change(productIdInput, { target: { value: '123' } });\n      expect(productIdInput).toHaveValue('123');\n    });\n\n    test('商品名の入力', () => {\n      render(<ProductCSV />);\n      const productNameInput = screen.getByLabelText('商品名');\n      fireEvent.change(productNameInput, { target: { value: 'テスト商品' } });\n      expect(productNameInput).toHaveValue('テスト商品');\n    });\n  });\n});\"}"
        }
      ]
    },
    {
      "id": "SCR-084",
      "category": "顧客管理",
      "screenName": "顧客検索画面",
      "description": "顧客を検索するための画面。",
      "Screen components": "検索フォーム（顧客ID、氏名、電話番号などの検索条件入力欄）、検索ボタン、検索結果リスト",
      "operatingProcedure": "検索条件を入力し、検索ボタンをクリックして顧客を検索する。",
      "user": "顧客対応担当者, 契約担当者",
      "accessRight": "loged-in user",
      "fileName": "customers/search.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\", \"SideBar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-085",
      "category": "顧客管理",
      "screenName": "顧客新規登録画面",
      "description": "新規顧客情報を登録する画面。",
      "Screen components": "顧客情報入力フォーム（氏名、住所、連絡先などの入力欄）、登録ボタン、キャンセルボタン",
      "operatingProcedure": "各項目に顧客情報を入力し、登録ボタンをクリックして顧客情報を登録する。",
      "user": "顧客対応担当者",
      "accessRight": "loged-in user",
      "fileName": "customers/new.tsx",
      "getData": "null",
      "postData": "[{\"table\":\"customers\", \"items\": [\"name\",\"furigana\",\"gender\",\"birth_date\",\"age\",\"organization_name\",\"representative_name\",\"job_title\",\"postal_code\",\"address1\",\"address2\",\"email\",\"phone\",\"notes\",\"warning_flag\"]}]",
      "commonComponent": "[\"Header.tsx\", \"SideBar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-086",
      "category": "顧客管理",
      "screenName": "特別リクエスト履歴画面",
      "description": "顧客の特別リクエスト履歴を表示する画面。",
      "Screen components": "特別リクエスト履歴リスト（リクエスト内容、対応状況などの一覧）、新規登録ボタン",
      "operatingProcedure": "特別リクエスト履歴を確認し、必要に応じて新規リクエスト登録画面に遷移する。",
      "user": "顧客対応担当者",
      "accessRight": "loged-in user",
      "fileName": "customers/[id]/requests.tsx",
      "getData": "[{\"table\":\"special_requests\", \"items\": [\"request_id\", \"customer_id\", \"request_type\", \"request_date\", \"description\",\"status\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\", \"SideBar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-087",
      "category": "顧客管理",
      "screenName": "特別リクエスト登録画面",
      "description": "特別リクエストを登録する画面。",
      "Screen components": "特別リクエスト情報入力フォーム（リクエスト内容、対応状況などの入力欄）、登録ボタン、キャンセルボタン",
      "operatingProcedure": "特別リクエスト情報を入力し、登録ボタンをクリックして特別リクエストを登録する。",
      "user": "顧客対応担当者",
      "accessRight": "loged-in user",
      "fileName": "customers/[id]/requests/new.tsx",
      "getData": "null",
      "postData": "[{\"table\":\"special_requests\", \"items\": [ \"customer_id\", \"request_type\", \"request_date\", \"description\",\"status\"]}]",
      "commonComponent": "[\"Header.tsx\", \"SideBar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-088",
      "category": "顧客管理",
      "screenName": "顧客削除確認画面",
      "description": "顧客削除の確認を行う画面。",
      "Screen components": "削除確認メッセージ、削除実行ボタン、キャンセルボタン",
      "operatingProcedure": "削除確認メッセージを確認し、削除実行ボタンをクリックして顧客情報を削除する。",
      "user": "顧客対応担当者",
      "accessRight": "loged-in user",
      "fileName": "customers/[id]/delete.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\", \"SideBar.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-089",
      "category": "商品管理",
      "screenName": "商品一覧画面",
      "description": "登録されている商品の一覧を表示する画面。",
      "Screen components": "商品一覧テーブル（商品コード、商品名、単価など）、検索フォーム、登録ボタン、編集ボタン、CSV出力ボタン",
      "operatingProcedure": "商品一覧を参照、検索条件を入力して検索、登録ボタンで商品登録画面に遷移、編集ボタンで商品編集画面に遷移、CSV出力ボタンで商品情報CSV出力画面に遷移",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "products/index.tsx",
      "getData": "[{\"table\":\"products\", \"items\":[\"product_code\", \"product_name\", \"unit_price\"]}]",
      "postData": "null",
      "commonComponent": "[\"Layout.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-090",
      "category": "商品管理",
      "screenName": "商品登録画面",
      "description": "新規商品を登録する画面。",
      "Screen components": "商品登録フォーム（商品コード、商品名、商品詳細、単価、税率など）、登録確認ボタン",
      "operatingProcedure": "商品情報を入力し、登録確認ボタンをクリックして商品登録確認画面に遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "products/create.tsx",
      "getData": "null",
      "postData": "[{\"table\":\"products\", \"items\":[\"product_code\", \"product_name\", \"product_description\", \"unit_price\",\"tax_rate\"]}]",
      "commonComponent": "[\"Layout.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-091",
      "category": "商品管理",
      "screenName": "商品修正画面",
      "description": "登録済みの商品を修正する画面。",
      "Screen components": "商品修正フォーム（商品コード、商品名、商品詳細、単価、税率など）、修正確認ボタン",
      "operatingProcedure": "修正対象の商品情報を入力し、修正確認ボタンをクリックして商品登録確認画面に遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "products/[product_code]/edit.tsx",
      "getData": "[{\"table\":\"products\", \"items\":[\"product_code\", \"product_name\", \"product_description\", \"unit_price\",\"tax_rate\"]}]",
      "postData": "[{\"table\":\"products\", \"items\":[\"product_code\", \"product_name\", \"product_description\", \"unit_price\",\"tax_rate\"]}]",
      "commonComponent": "[\"Layout.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-092",
      "category": "商品管理",
      "screenName": "商品登録確認画面",
      "description": "登録または修正する商品情報の確認画面。",
      "Screen components": "商品情報表示、登録/修正確定ボタン、戻るボタン",
      "operatingProcedure": "商品情報を確認し、確定ボタンで登録/修正完了画面へ遷移、戻るボタンで登録/修正画面へ遷移",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "products/confirm.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Layout.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-093",
      "category": "商品管理",
      "screenName": "商品登録完了画面",
      "description": "商品登録または修正が完了したことを通知する画面。",
      "Screen components": "完了メッセージ、商品一覧へ戻るボタン",
      "operatingProcedure": "完了メッセージを確認し、商品一覧へ戻るボタンをクリックして商品一覧画面へ遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "products/complete.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Layout.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-094",
      "category": "商品管理",
      "screenName": "CSV出力完了画面",
      "description": "商品情報のCSV出力が完了したことを通知する画面。",
      "Screen components": "完了メッセージ、商品一覧へ戻るボタン",
      "operatingProcedure": "完了メッセージを確認し、商品一覧へ戻るボタンをクリックして商品一覧画面へ遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "products/csvcomplete.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Layout.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-095",
      "category": "商品管理",
      "screenName": "商品詳細画面",
      "description": "商品の詳細情報を表示する画面。",
      "Screen components": "商品詳細情報表示（商品コード、商品名、商品詳細、単価、税率など）、編集ボタン、一覧へ戻るボタン",
      "operatingProcedure": "商品詳細情報を確認し、編集ボタンで商品編集画面へ遷移、一覧へ戻るボタンで商品一覧画面へ遷移",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "products/[product_code]/detail.tsx",
      "getData": "[{\"table\":\"products\", \"items\":[\"product_code\", \"product_name\", \"product_description\", \"unit_price\",\"tax_rate\"]}]",
      "postData": "null",
      "commonComponent": "[\"Layout.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-096",
      "category": "アラート機能",
      "screenName": "アラート設定画面",
      "description": "アラートの条件や通知先を設定するための画面。",
      "Screen components": "アラート条件設定ボタン、アラート通知先設定ボタン",
      "operatingProcedure": "アラート条件設定ボタンまたはアラート通知先設定ボタンをクリックして、対応する設定画面に遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "alertSetting.tsx",
      "getData": "null",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-097",
      "category": "アラート機能",
      "screenName": "アラート一覧画面",
      "description": "発生したアラートの一覧を表示する画面。",
      "Screen components": "アラート一覧、アラート詳細表示ボタン、CSV出力ボタン",
      "operatingProcedure": "アラート一覧からアラートを選択し、詳細表示ボタンをクリックしてアラート詳細画面に遷移する。CSV出力ボタンをクリックしてアラート一覧をCSV出力する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "alertList.tsx",
      "getData": "[{\"table\":\"alerts\", \"items\":[\"alert_id\",\"alert_type\",\"alert_message\",\"alert_time\",\"status\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-098",
      "category": "アラート機能",
      "screenName": "アラート詳細画面",
      "description": "選択されたアラートの詳細情報を表示する画面。",
      "Screen components": "アラート詳細情報、アラート対応登録ボタン、アラート履歴ボタン",
      "operatingProcedure": "アラート詳細情報を確認し、アラート対応登録ボタンをクリックしてアラート対応登録画面に遷移する。アラート履歴ボタンをクリックしてアラート履歴画面に遷移する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "/alerts/[alertId].tsx",
      "getData": "[{\"table\":\"alerts\", \"items\":[\"alert_id\",\"alert_type\",\"alert_message\",\"alert_time\",\"status\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-099",
      "category": "アラート機能",
      "screenName": "アラート対応登録画面",
      "description": "アラートへの対応状況を登録する画面。",
      "Screen components": "対応内容入力フォーム、登録ボタン",
      "operatingProcedure": "対応内容を入力し、登録ボタンをクリックする。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "/alerts/[alertId]/registerResponse.tsx",
      "getData": "[{\"table\":\"alerts\", \"items\":[\"alert_id\",\"alert_type\",\"alert_message\",\"alert_time\",\"status\"]}]",
      "postData": "[{\"table\":\"alert_responses\", \"items\":[\"alert_id\",\"response_text\",\"response_time\",\"response_user\"]}]",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-100",
      "category": "アラート機能",
      "screenName": "アラート条件設定画面",
      "description": "アラートを発生させる条件を設定する画面。",
      "Screen components": "アラート条件設定フォーム（アラート種別、閾値など）、保存ボタン",
      "operatingProcedure": "アラート条件を設定し、保存ボタンをクリックする。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "alertConditionSetting.tsx",
      "getData": "[{\"table\":\"alert_conditions\", \"items\":[\"condition_id\",\"alert_type\",\"threshold\",\"is_active\"]}]",
      "postData": "[{\"table\":\"alert_conditions\", \"items\":[\"alert_type\",\"threshold\",\"is_active\"]}]",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-101",
      "category": "アラート機能",
      "screenName": "アラート通知先設定画面",
      "description": "アラートの通知先を設定する画面。",
      "Screen components": "通知先設定フォーム（メールアドレス、通知タイミングなど）、保存ボタン",
      "operatingProcedure": "通知先を設定し、保存ボタンをクリックする。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "alertNotificationSetting.tsx",
      "getData": "[{\"table\":\"alert_notification_settings\", \"items\":[\"setting_id\",\"notification_type\",\"notification_destination\"]}]",
      "postData": "[{\"table\":\"alert_notification_settings\", \"items\":[\"notification_type\",\"notification_destination\"]}]",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-102",
      "category": "アラート機能",
      "screenName": "アラートCSV出力画面",
      "description": "アラート一覧をCSV形式で出力するための画面。",
      "Screen components": "CSV出力ボタン",
      "operatingProcedure": "CSV出力ボタンをクリックし、アラート一覧をCSVファイルとしてダウンロードする。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "alertCsvOutput.tsx",
      "getData": "[{\"table\":\"alerts\", \"items\":[\"alert_id\",\"alert_type\",\"alert_message\",\"alert_time\",\"status\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    },
    {
      "id": "SCR-103",
      "category": "アラート機能",
      "screenName": "アラート履歴画面",
      "description": "アラートへの対応履歴を表示する画面。",
      "Screen components": "アラート対応履歴一覧",
      "operatingProcedure": "対応履歴一覧を確認する。",
      "user": "定期購読管理システムの管理者",
      "accessRight": "loged-in user",
      "fileName": "/alerts/[alertId]/alertHistory.tsx",
      "getData": "[{\"table\":\"alert_responses\", \"items\":[\"alert_id\",\"response_text\",\"response_time\",\"response_user\"]}]",
      "postData": "null",
      "commonComponent": "[\"Header.tsx\",\"Footer.tsx\"]",
      "relatedBackendHandles": []
    }
  ]
}
